package com.example.linguause_mvp.model

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import androidx.room.*


@Dao
interface WordDao {

    // üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å–ª–æ–≤ –≤ –±–∞–∑–µ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Å–ª–æ–≤–∞—Ä—å)
    @Query("SELECT COUNT(*) FROM words")
    suspend fun getWordCount(): Int

    // üì• –í—Å—Ç–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤ (–∏–∑ CSV)
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertWords(words: List<WordEntity>)

    // üìÑ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–ª–æ–≤–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–ª–∞–¥–∏—Ç—å)
    @Query("SELECT * FROM words")
    suspend fun getAllWords(): List<WordEntity>

    // üîç –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏ —Ä–µ—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "verb")
    @Query("SELECT * FROM words WHERE partOfSpeech = :type")
    suspend fun getWordsByType(type: String): List<WordEntity>

    // üîç –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥—É
    @Query("SELECT * FROM words WHERE word LIKE '%' || :query || '%' OR translation LIKE '%' || :query || '%'")
    suspend fun searchWords(query: String): List<WordEntity>

    // ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑—É—á–∞–µ–º—ã–µ —Å–ª–æ–≤–∞ (isStudying = true)
    @Query("SELECT * FROM words WHERE isStudying = 1")
    suspend fun getStudyingWords(): List<WordEntity>

    // üß† –ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
    @Query("SELECT * FROM words WHERE isInVocabulary = 1")
    suspend fun getActiveVocabulary(): List<WordEntity>

    // üß© –°–ª–æ–≤–∞ –ø–æ —É—Ä–æ–≤–Ω—é (–Ω–∞–ø—Ä–∏–º–µ—Ä "A2")
    @Query("SELECT * FROM words WHERE level = :level")
    suspend fun getWordsByLevel(level: String): List<WordEntity>

    // üéØ –ü–æ —Ç–µ–º–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "travel")
    @Query("SELECT * FROM words WHERE topic = :topic")
    suspend fun getWordsByTopic(topic: String): List<WordEntity>

    // ‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ª–æ–≤–æ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–ª–∞–≥–æ–≤)
    @Update
    suspend fun updateWord(word: WordEntity)
}